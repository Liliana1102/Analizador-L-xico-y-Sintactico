Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CONTENIDO

Grammar

Rule 0     S' -> AR
Rule 1     AR -> varint
Rule 2     AR -> varstr
Rule 3     AR -> funcion
Rule 4     AR -> funcionVarStr
Rule 5     AR -> funcionVarInt
Rule 6     AR -> ciclo_for
Rule 7     AR -> ciclo_forImprimir
Rule 8     AR -> ifelseImprimir
Rule 9     AR -> ifelseImprimirInt
Rule 10    AR -> if
Rule 11    varint -> IDENTIFICADOR INT ASIGNACION NUMERO
Rule 12    varintAux -> IDENTIFICADOR INT ASIGNACION NUMERO
Rule 13    varstr -> IDENTIFICADOR STR ASIGNACION COMILLA IDENTIFICADOR COMILLA
Rule 14    varstrAux -> IDENTIFICADOR STR ASIGNACION COMILLA IDENTIFICADOR COMILLA
Rule 15    funcion -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA
Rule 16    funcionVarStr -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE varstr IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA
Rule 17    funcionVarInt -> varint FUN IDENTIFICADOR PAR_ABRE IDENTIFICADOR INT PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA
Rule 18    ciclo_for -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA
Rule 19    ciclo_forImprimir -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA
Rule 20    if -> IF PAR_ABRE PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA ELSE LLAVE_ABRE LLAVE_CIERRA
Rule 21    ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA
Rule 22    ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

Terminals, with rules where they appear

ASIGNACION           : 11 12 13 14
COMILLA              : 13 13 14 14 15 15 21 21 21 21 22 22 22 22
CONTENIDO            : 
ELSE                 : 20 21 22
FOR                  : 18 19
FUN                  : 15 16 17
IDENTIFICADOR        : 11 12 13 13 14 14 15 15 16 16 17 17 17 18 18 19 19 19 21 21 21 21 22 22 22 22
IF                   : 20 21 22
IMPRIMIR             : 15 16 17 19 21 21 22 22
INCREMENTO           : 18 19
INT                  : 11 12 17
LLAVE_ABRE           : 15 16 17 18 19 20 20 21 21 22 22
LLAVE_CIERRA         : 15 16 17 18 19 20 20 21 21 22 22
NUMERO               : 11 12 18 19
OP_RELACIONAL        : 18 19 21 22
PAR_ABRE             : 15 15 16 16 17 17 18 19 19 20 21 21 21 22 22 22
PAR_CIERRA           : 15 15 16 16 17 17 18 19 19 20 21 21 21 22 22 22
PUNTOCOMA            : 18 18 19 19
STR                  : 13 14
error                : 

Nonterminals, with rules where they appear

AR                   : 0
ciclo_for            : 6
ciclo_forImprimir    : 7
funcion              : 3
funcionVarInt        : 5
funcionVarStr        : 4
if                   : 10
ifelseImprimir       : 8
ifelseImprimirInt    : 9
varint               : 1 17 18 19 22
varintAux            : 22
varstr               : 2 16 21
varstrAux            : 21

Parsing method: LALR

state 0

    (0) S' -> . AR
    (1) AR -> . varint
    (2) AR -> . varstr
    (3) AR -> . funcion
    (4) AR -> . funcionVarStr
    (5) AR -> . funcionVarInt
    (6) AR -> . ciclo_for
    (7) AR -> . ciclo_forImprimir
    (8) AR -> . ifelseImprimir
    (9) AR -> . ifelseImprimirInt
    (10) AR -> . if
    (11) varint -> . IDENTIFICADOR INT ASIGNACION NUMERO
    (13) varstr -> . IDENTIFICADOR STR ASIGNACION COMILLA IDENTIFICADOR COMILLA
    (15) funcion -> . FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA
    (16) funcionVarStr -> . FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE varstr IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA
    (17) funcionVarInt -> . varint FUN IDENTIFICADOR PAR_ABRE IDENTIFICADOR INT PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA
    (18) ciclo_for -> . FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (19) ciclo_forImprimir -> . FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA
    (21) ifelseImprimir -> . varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA
    (22) ifelseImprimirInt -> . varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA
    (20) if -> . IF PAR_ABRE PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA ELSE LLAVE_ABRE LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 12
    FUN             shift and go to state 13
    FOR             shift and go to state 14
    IF              shift and go to state 15

    AR                             shift and go to state 1
    varint                         shift and go to state 2
    varstr                         shift and go to state 3
    funcion                        shift and go to state 4
    funcionVarStr                  shift and go to state 5
    funcionVarInt                  shift and go to state 6
    ciclo_for                      shift and go to state 7
    ciclo_forImprimir              shift and go to state 8
    ifelseImprimir                 shift and go to state 9
    ifelseImprimirInt              shift and go to state 10
    if                             shift and go to state 11

state 1

    (0) S' -> AR .



state 2

    (1) AR -> varint .
    (17) funcionVarInt -> varint . FUN IDENTIFICADOR PAR_ABRE IDENTIFICADOR INT PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA
    (22) ifelseImprimirInt -> varint . varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA
    (12) varintAux -> . IDENTIFICADOR INT ASIGNACION NUMERO

    $end            reduce using rule 1 (AR -> varint .)
    FUN             shift and go to state 16
    IDENTIFICADOR   shift and go to state 17

    varintAux                      shift and go to state 18

state 3

    (2) AR -> varstr .
    (21) ifelseImprimir -> varstr . varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA
    (14) varstrAux -> . IDENTIFICADOR STR ASIGNACION COMILLA IDENTIFICADOR COMILLA

    $end            reduce using rule 2 (AR -> varstr .)
    IDENTIFICADOR   shift and go to state 20

    varstrAux                      shift and go to state 19

state 4

    (3) AR -> funcion .

    $end            reduce using rule 3 (AR -> funcion .)


state 5

    (4) AR -> funcionVarStr .

    $end            reduce using rule 4 (AR -> funcionVarStr .)


state 6

    (5) AR -> funcionVarInt .

    $end            reduce using rule 5 (AR -> funcionVarInt .)


state 7

    (6) AR -> ciclo_for .

    $end            reduce using rule 6 (AR -> ciclo_for .)


state 8

    (7) AR -> ciclo_forImprimir .

    $end            reduce using rule 7 (AR -> ciclo_forImprimir .)


state 9

    (8) AR -> ifelseImprimir .

    $end            reduce using rule 8 (AR -> ifelseImprimir .)


state 10

    (9) AR -> ifelseImprimirInt .

    $end            reduce using rule 9 (AR -> ifelseImprimirInt .)


state 11

    (10) AR -> if .

    $end            reduce using rule 10 (AR -> if .)


state 12

    (11) varint -> IDENTIFICADOR . INT ASIGNACION NUMERO
    (13) varstr -> IDENTIFICADOR . STR ASIGNACION COMILLA IDENTIFICADOR COMILLA

    INT             shift and go to state 21
    STR             shift and go to state 22


state 13

    (15) funcion -> FUN . IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA
    (16) funcionVarStr -> FUN . IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE varstr IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 23


state 14

    (18) ciclo_for -> FOR . PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (19) ciclo_forImprimir -> FOR . PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    PAR_ABRE        shift and go to state 24


state 15

    (20) if -> IF . PAR_ABRE PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA ELSE LLAVE_ABRE LLAVE_CIERRA

    PAR_ABRE        shift and go to state 25


state 16

    (17) funcionVarInt -> varint FUN . IDENTIFICADOR PAR_ABRE IDENTIFICADOR INT PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 26


state 17

    (12) varintAux -> IDENTIFICADOR . INT ASIGNACION NUMERO

    INT             shift and go to state 27


state 18

    (22) ifelseImprimirInt -> varint varintAux . IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    IF              shift and go to state 28


state 19

    (21) ifelseImprimir -> varstr varstrAux . IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    IF              shift and go to state 29


state 20

    (14) varstrAux -> IDENTIFICADOR . STR ASIGNACION COMILLA IDENTIFICADOR COMILLA

    STR             shift and go to state 30


state 21

    (11) varint -> IDENTIFICADOR INT . ASIGNACION NUMERO

    ASIGNACION      shift and go to state 31


state 22

    (13) varstr -> IDENTIFICADOR STR . ASIGNACION COMILLA IDENTIFICADOR COMILLA

    ASIGNACION      shift and go to state 32


state 23

    (15) funcion -> FUN IDENTIFICADOR . PAR_ABRE PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA
    (16) funcionVarStr -> FUN IDENTIFICADOR . PAR_ABRE PAR_CIERRA LLAVE_ABRE varstr IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    PAR_ABRE        shift and go to state 33


state 24

    (18) ciclo_for -> FOR PAR_ABRE . varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (19) ciclo_forImprimir -> FOR PAR_ABRE . varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA
    (11) varint -> . IDENTIFICADOR INT ASIGNACION NUMERO

    IDENTIFICADOR   shift and go to state 35

    varint                         shift and go to state 34

state 25

    (20) if -> IF PAR_ABRE . PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA ELSE LLAVE_ABRE LLAVE_CIERRA

    PAR_CIERRA      shift and go to state 36


state 26

    (17) funcionVarInt -> varint FUN IDENTIFICADOR . PAR_ABRE IDENTIFICADOR INT PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    PAR_ABRE        shift and go to state 37


state 27

    (12) varintAux -> IDENTIFICADOR INT . ASIGNACION NUMERO

    ASIGNACION      shift and go to state 38


state 28

    (22) ifelseImprimirInt -> varint varintAux IF . PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    PAR_ABRE        shift and go to state 39


state 29

    (21) ifelseImprimir -> varstr varstrAux IF . PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    PAR_ABRE        shift and go to state 40


state 30

    (14) varstrAux -> IDENTIFICADOR STR . ASIGNACION COMILLA IDENTIFICADOR COMILLA

    ASIGNACION      shift and go to state 41


state 31

    (11) varint -> IDENTIFICADOR INT ASIGNACION . NUMERO

    NUMERO          shift and go to state 42


state 32

    (13) varstr -> IDENTIFICADOR STR ASIGNACION . COMILLA IDENTIFICADOR COMILLA

    COMILLA         shift and go to state 43


state 33

    (15) funcion -> FUN IDENTIFICADOR PAR_ABRE . PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA
    (16) funcionVarStr -> FUN IDENTIFICADOR PAR_ABRE . PAR_CIERRA LLAVE_ABRE varstr IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    PAR_CIERRA      shift and go to state 44


state 34

    (18) ciclo_for -> FOR PAR_ABRE varint . PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (19) ciclo_forImprimir -> FOR PAR_ABRE varint . PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    PUNTOCOMA       shift and go to state 45


state 35

    (11) varint -> IDENTIFICADOR . INT ASIGNACION NUMERO

    INT             shift and go to state 21


state 36

    (20) if -> IF PAR_ABRE PAR_CIERRA . LLAVE_ABRE LLAVE_CIERRA ELSE LLAVE_ABRE LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 46


state 37

    (17) funcionVarInt -> varint FUN IDENTIFICADOR PAR_ABRE . IDENTIFICADOR INT PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 47


state 38

    (12) varintAux -> IDENTIFICADOR INT ASIGNACION . NUMERO

    NUMERO          shift and go to state 48


state 39

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE . IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 49


state 40

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE . IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 50


state 41

    (14) varstrAux -> IDENTIFICADOR STR ASIGNACION . COMILLA IDENTIFICADOR COMILLA

    COMILLA         shift and go to state 51


state 42

    (11) varint -> IDENTIFICADOR INT ASIGNACION NUMERO .

    FUN             reduce using rule 11 (varint -> IDENTIFICADOR INT ASIGNACION NUMERO .)
    IDENTIFICADOR   reduce using rule 11 (varint -> IDENTIFICADOR INT ASIGNACION NUMERO .)
    $end            reduce using rule 11 (varint -> IDENTIFICADOR INT ASIGNACION NUMERO .)
    PUNTOCOMA       reduce using rule 11 (varint -> IDENTIFICADOR INT ASIGNACION NUMERO .)


state 43

    (13) varstr -> IDENTIFICADOR STR ASIGNACION COMILLA . IDENTIFICADOR COMILLA

    IDENTIFICADOR   shift and go to state 52


state 44

    (15) funcion -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA . LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA
    (16) funcionVarStr -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA . LLAVE_ABRE varstr IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 53


state 45

    (18) ciclo_for -> FOR PAR_ABRE varint PUNTOCOMA . IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (19) ciclo_forImprimir -> FOR PAR_ABRE varint PUNTOCOMA . IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 54


state 46

    (20) if -> IF PAR_ABRE PAR_CIERRA LLAVE_ABRE . LLAVE_CIERRA ELSE LLAVE_ABRE LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 55


state 47

    (17) funcionVarInt -> varint FUN IDENTIFICADOR PAR_ABRE IDENTIFICADOR . INT PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    INT             shift and go to state 56


state 48

    (12) varintAux -> IDENTIFICADOR INT ASIGNACION NUMERO .

    IF              reduce using rule 12 (varintAux -> IDENTIFICADOR INT ASIGNACION NUMERO .)


state 49

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR . OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    OP_RELACIONAL   shift and go to state 57


state 50

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR . OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    OP_RELACIONAL   shift and go to state 58


state 51

    (14) varstrAux -> IDENTIFICADOR STR ASIGNACION COMILLA . IDENTIFICADOR COMILLA

    IDENTIFICADOR   shift and go to state 59


state 52

    (13) varstr -> IDENTIFICADOR STR ASIGNACION COMILLA IDENTIFICADOR . COMILLA

    COMILLA         shift and go to state 60


state 53

    (15) funcion -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE . IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA
    (16) funcionVarStr -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE . varstr IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA
    (13) varstr -> . IDENTIFICADOR STR ASIGNACION COMILLA IDENTIFICADOR COMILLA

    IMPRIMIR        shift and go to state 62
    IDENTIFICADOR   shift and go to state 61

    varstr                         shift and go to state 63

state 54

    (18) ciclo_for -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR . OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (19) ciclo_forImprimir -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR . OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    OP_RELACIONAL   shift and go to state 64


state 55

    (20) if -> IF PAR_ABRE PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA . ELSE LLAVE_ABRE LLAVE_CIERRA

    ELSE            shift and go to state 65


state 56

    (17) funcionVarInt -> varint FUN IDENTIFICADOR PAR_ABRE IDENTIFICADOR INT . PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    PAR_CIERRA      shift and go to state 66


state 57

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL . IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 67


state 58

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL . IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 68


state 59

    (14) varstrAux -> IDENTIFICADOR STR ASIGNACION COMILLA IDENTIFICADOR . COMILLA

    COMILLA         shift and go to state 69


state 60

    (13) varstr -> IDENTIFICADOR STR ASIGNACION COMILLA IDENTIFICADOR COMILLA .

    IDENTIFICADOR   reduce using rule 13 (varstr -> IDENTIFICADOR STR ASIGNACION COMILLA IDENTIFICADOR COMILLA .)
    $end            reduce using rule 13 (varstr -> IDENTIFICADOR STR ASIGNACION COMILLA IDENTIFICADOR COMILLA .)
    IMPRIMIR        reduce using rule 13 (varstr -> IDENTIFICADOR STR ASIGNACION COMILLA IDENTIFICADOR COMILLA .)


state 61

    (13) varstr -> IDENTIFICADOR . STR ASIGNACION COMILLA IDENTIFICADOR COMILLA

    STR             shift and go to state 22


state 62

    (15) funcion -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE IMPRIMIR . PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    PAR_ABRE        shift and go to state 70


state 63

    (16) funcionVarStr -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE varstr . IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    IMPRIMIR        shift and go to state 71


state 64

    (18) ciclo_for -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL . NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (19) ciclo_forImprimir -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL . NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    NUMERO          shift and go to state 72


state 65

    (20) if -> IF PAR_ABRE PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA ELSE . LLAVE_ABRE LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 73


state 66

    (17) funcionVarInt -> varint FUN IDENTIFICADOR PAR_ABRE IDENTIFICADOR INT PAR_CIERRA . LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 74


state 67

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR . PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    PAR_CIERRA      shift and go to state 75


state 68

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR . PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    PAR_CIERRA      shift and go to state 76


state 69

    (14) varstrAux -> IDENTIFICADOR STR ASIGNACION COMILLA IDENTIFICADOR COMILLA .

    IF              reduce using rule 14 (varstrAux -> IDENTIFICADOR STR ASIGNACION COMILLA IDENTIFICADOR COMILLA .)


state 70

    (15) funcion -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE . COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    COMILLA         shift and go to state 77


state 71

    (16) funcionVarStr -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE varstr IMPRIMIR . PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    PAR_ABRE        shift and go to state 78


state 72

    (18) ciclo_for -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO . PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (19) ciclo_forImprimir -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO . PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    PUNTOCOMA       shift and go to state 79


state 73

    (20) if -> IF PAR_ABRE PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA ELSE LLAVE_ABRE . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 80


state 74

    (17) funcionVarInt -> varint FUN IDENTIFICADOR PAR_ABRE IDENTIFICADOR INT PAR_CIERRA LLAVE_ABRE . IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    IMPRIMIR        shift and go to state 81


state 75

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA . LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 82


state 76

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA . LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 83


state 77

    (15) funcion -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA . IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 84


state 78

    (16) funcionVarStr -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE varstr IMPRIMIR PAR_ABRE . IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 85


state 79

    (18) ciclo_for -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA . IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (19) ciclo_forImprimir -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA . IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 86


state 80

    (20) if -> IF PAR_ABRE PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA ELSE LLAVE_ABRE LLAVE_CIERRA .

    $end            reduce using rule 20 (if -> IF PAR_ABRE PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA ELSE LLAVE_ABRE LLAVE_CIERRA .)


state 81

    (17) funcionVarInt -> varint FUN IDENTIFICADOR PAR_ABRE IDENTIFICADOR INT PAR_CIERRA LLAVE_ABRE IMPRIMIR . PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    PAR_ABRE        shift and go to state 87


state 82

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE . IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    IMPRIMIR        shift and go to state 88


state 83

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE . IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    IMPRIMIR        shift and go to state 89


state 84

    (15) funcion -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR . COMILLA PAR_CIERRA LLAVE_CIERRA

    COMILLA         shift and go to state 90


state 85

    (16) funcionVarStr -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE varstr IMPRIMIR PAR_ABRE IDENTIFICADOR . PAR_CIERRA LLAVE_CIERRA

    PAR_CIERRA      shift and go to state 91


state 86

    (18) ciclo_for -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR . INCREMENTO PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (19) ciclo_forImprimir -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR . INCREMENTO PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    INCREMENTO      shift and go to state 92


state 87

    (17) funcionVarInt -> varint FUN IDENTIFICADOR PAR_ABRE IDENTIFICADOR INT PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE . IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 93


state 88

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR . PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    PAR_ABRE        shift and go to state 94


state 89

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR . PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    PAR_ABRE        shift and go to state 95


state 90

    (15) funcion -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA . PAR_CIERRA LLAVE_CIERRA

    PAR_CIERRA      shift and go to state 96


state 91

    (16) funcionVarStr -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE varstr IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 97


state 92

    (18) ciclo_for -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO . PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (19) ciclo_forImprimir -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO . PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    PAR_CIERRA      shift and go to state 98


state 93

    (17) funcionVarInt -> varint FUN IDENTIFICADOR PAR_ABRE IDENTIFICADOR INT PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR . PAR_CIERRA LLAVE_CIERRA

    PAR_CIERRA      shift and go to state 99


state 94

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE . COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    COMILLA         shift and go to state 100


state 95

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE . COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    COMILLA         shift and go to state 101


state 96

    (15) funcion -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 102


state 97

    (16) funcionVarStr -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE varstr IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA .

    $end            reduce using rule 16 (funcionVarStr -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE varstr IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA .)


state 98

    (18) ciclo_for -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA . LLAVE_ABRE LLAVE_CIERRA
    (19) ciclo_forImprimir -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA . LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 103


state 99

    (17) funcionVarInt -> varint FUN IDENTIFICADOR PAR_ABRE IDENTIFICADOR INT PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 104


state 100

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA . IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 105


state 101

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA . IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 106


state 102

    (15) funcion -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA .

    $end            reduce using rule 15 (funcion -> FUN IDENTIFICADOR PAR_ABRE PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA .)


state 103

    (18) ciclo_for -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE . LLAVE_CIERRA
    (19) ciclo_forImprimir -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE . IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 107
    IMPRIMIR        shift and go to state 108


state 104

    (17) funcionVarInt -> varint FUN IDENTIFICADOR PAR_ABRE IDENTIFICADOR INT PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA .

    $end            reduce using rule 17 (funcionVarInt -> varint FUN IDENTIFICADOR PAR_ABRE IDENTIFICADOR INT PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA .)


state 105

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR . COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    COMILLA         shift and go to state 109


state 106

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR . COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    COMILLA         shift and go to state 110


state 107

    (18) ciclo_for -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA .

    $end            reduce using rule 18 (ciclo_for -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE LLAVE_CIERRA .)


state 108

    (19) ciclo_forImprimir -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE IMPRIMIR . PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    PAR_ABRE        shift and go to state 111


state 109

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA . PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    PAR_CIERRA      shift and go to state 112


state 110

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA . PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    PAR_CIERRA      shift and go to state 113


state 111

    (19) ciclo_forImprimir -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE . IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 114


state 112

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA . LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 115


state 113

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA . LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 116


state 114

    (19) ciclo_forImprimir -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR . PAR_CIERRA LLAVE_CIERRA

    PAR_CIERRA      shift and go to state 117


state 115

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA . ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    ELSE            shift and go to state 118


state 116

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA . ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    ELSE            shift and go to state 119


state 117

    (19) ciclo_forImprimir -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 120


state 118

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE . LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 121


state 119

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE . LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 122


state 120

    (19) ciclo_forImprimir -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA .

    $end            reduce using rule 19 (ciclo_forImprimir -> FOR PAR_ABRE varint PUNTOCOMA IDENTIFICADOR OP_RELACIONAL NUMERO PUNTOCOMA IDENTIFICADOR INCREMENTO PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE IDENTIFICADOR PAR_CIERRA LLAVE_CIERRA .)


state 121

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE . IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    IMPRIMIR        shift and go to state 123


state 122

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE . IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    IMPRIMIR        shift and go to state 124


state 123

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR . PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    PAR_ABRE        shift and go to state 125


state 124

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR . PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    PAR_ABRE        shift and go to state 126


state 125

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE . COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    COMILLA         shift and go to state 127


state 126

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE . COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    COMILLA         shift and go to state 128


state 127

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA . IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 129


state 128

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA . IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 130


state 129

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR . COMILLA PAR_CIERRA LLAVE_CIERRA

    COMILLA         shift and go to state 131


state 130

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR . COMILLA PAR_CIERRA LLAVE_CIERRA

    COMILLA         shift and go to state 132


state 131

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA . PAR_CIERRA LLAVE_CIERRA

    PAR_CIERRA      shift and go to state 133


state 132

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA . PAR_CIERRA LLAVE_CIERRA

    PAR_CIERRA      shift and go to state 134


state 133

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 135


state 134

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 136


state 135

    (22) ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA .

    $end            reduce using rule 22 (ifelseImprimirInt -> varint varintAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA .)


state 136

    (21) ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA .

    $end            reduce using rule 21 (ifelseImprimir -> varstr varstrAux IF PAR_ABRE IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PAR_CIERRA LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA ELSE LLAVE_ABRE IMPRIMIR PAR_ABRE COMILLA IDENTIFICADOR COMILLA PAR_CIERRA LLAVE_CIERRA .)

